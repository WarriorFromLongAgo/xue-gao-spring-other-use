# 应用名称
spring:
  application:
    name: 'dynamic-tp-zkRefresh'
  dynamic:
    tp:
      enabled: true
      enabledBanner: true           # 是否开启banner打印，默认true
      enabledCollect: true          # 是否开启监控指标采集，默认false
      collectorTypes: logging     # 监控数据采集器类型（logging | micrometer | internal_logging），默认micrometer
      monitorInterval: 5            # 监控时间间隔（报警判断、指标采集），默认5s
      #      configType: yml               # 配置文件类型，非cloud nacos 和 apollo需配置，其他不用配
      config-type: properties         # zookeeper支持 properties & json 配置
      platforms: # 通知报警平台配置
        - platform: Xue-Gao-pushDeer
      zookeeper:
        #        config-version: 1.0.0
        zk-connect-str: 127.0.0.1:2181
        root-node: /configserver/dev
        node: xuegao-thread-test1
      executors: # 动态线程池配置，都有默认值，采用默认值的可以不配置该项，减少配置量
        - threadPoolName: thread_num_2
          threadPoolAliasName: 测试线程池             # 线程池别名
          executorType: common                     # 线程池类型common、eager：适用于io密集型
          corePoolSize: 6
          maximumPoolSize: 8
          queueCapacity: 200
          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类
          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类
          keepAliveTime: 50
          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时
          threadNamePrefix: test                         # 线程名前缀
          waitForTasksToCompleteOnShutdown: false        # 参考spring线程池设计，优雅关闭线程池
          awaitTerminationSeconds: 5                     # 单位（s）
          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false
          runTimeout: 200                                # 任务执行超时阈值，目前只做告警用，单位（ms）
          queueTimeout: 100                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）
          taskWrapperNames: [ "ttl" ]                      # 任务包装器名称，集成TaskWrapper接口
          notifyItems: # 报警项，不配置自动会按默认值配置（变更通知、容量报警、活性报警、拒绝报警、任务超时报警）
            - type: capacity               # 报警项类型，查看源码 NotifyTypeEnum枚举类
              enabled: true
              threshold: 0                # 报警阈值
              platforms: [ Xue-Gao-pushDeer ]     # 可选配置，不配置默认拿上层platforms配置的所以平台
              interval: 120                # 报警间隔（单位：s）
            - type: change
              enabled: true
              threshold: 0                # 报警阈值
              platforms: [ Xue-Gao-pushDeer ]     # 可选配置，不配置默认拿上层platforms配置的所以平台
              interval: 120                # 报警间隔（单位：s）
            - type: liveness
              enabled: true
              threshold: 0                # 报警阈值
              platforms: [ Xue-Gao-pushDeer ]     # 可选配置，不配置默认拿上层platforms配置的所以平台
              interval: 120                # 报警间隔（单位：s）
            - type: reject
              enabled: true
              threshold: 0                # 报警阈值
              platforms: [ Xue-Gao-pushDeer ]     # 可选配置，不配置默认拿上层platforms配置的所以平台
              interval: 120                # 报警间隔（单位：s）
            - type: run_timeout
              enabled: true
              threshold: 0                # 报警阈值
              platforms: [ Xue-Gao-pushDeer ]     # 可选配置，不配置默认拿上层platforms配置的所以平台
              interval: 120                # 报警间隔（单位：s）
            - type: queue_timeout
              enabled: true
              threshold: 0                # 报警阈值
              platforms: [ Xue-Gao-pushDeer ]     # 可选配置，不配置默认拿上层platforms配置的所以平台
              interval: 120                # 报警间隔（单位：s）
logging:
  level:
    root: debug

feign:
  client:
    config:
      #default 设置的全局超时时间
      default:
        loggerLevel: full
        connectTimeout: 5000
        readTimeout: 5000

  compression:
    #  Tip提醒： 如果服务消费端的CPU资源比较紧张的话，建议不要开启数据的压缩功能，
    #  因为数据压缩和解压都需要消耗CPU的资源，这样反而会给CPU增加了额外的负担，也会导致系统性能降低。
    request:
      # 开启请求数据的压缩功能
      enabled: true
      mime-types: text/xml,application/xml, application/json  # 压缩类型
      min-request-size: 1024  # 最小压缩值标准，当数据大于 1024 才会进行压缩
    response:
      enabled: true  # 开启响应数据压缩功能