server:
  port: 14000

spring:
  application:
    name: feign-client-service
  security:
    user:
      name: root               # 用户名
      password: 123456   # 密码
  # 设置注册中心
eureka:
  instance:
    hostname: "127.0.0.1"
  client:
    #不显示对server应用的注册
    #    是否将自己注册到 Eureka-Server 中，默认的为 true
    register-with-eureka: true
    #    是否需要拉取服务信息，默认未true
    fetchRegistry: true
    # 表示 Eureka Client 间隔多久去服务器拉取信息，默认为 30 秒
    registry-fetch-interval-seconds: 10
    serviceUrl:
      #配置eureka服务注册中心地址 如果eureka server服务注册中心是集群部署 只配置一个其他服务注册中心也能发现
      defaultZone: "http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:8761/eureka/"
#      defaultZone: "http://root:123456@127.0.0.1:8761/eureka/"
feign:
  client:
    config:
      #default 设置的全局超时时间
      default:
        loggerLevel: full
        connectTimeout: 5000
        readTimeout: 5000
      # 指定服务
  #      feign-server-service:
  #          connectTimeout: 3000  # 请求链接时间  默认是1s
  #          readTimeout: 3000  # 请求响应超时时间 默认是1s
  #          loggerLevel: full # 请求日志打印详情  要配合下面的 debug一起使用
  compression:
    #  Tip提醒： 如果服务消费端的CPU资源比较紧张的话，建议不要开启数据的压缩功能，
    #  因为数据压缩和解压都需要消耗CPU的资源，这样反而会给CPU增加了额外的负担，也会导致系统性能降低。
    request:
      # 开启请求数据的压缩功能
      enabled: true
      mime-types: text/xml,application/xml, application/json  # 压缩类型
      min-request-size: 1024  # 最小压缩值标准，当数据大于 1024 才会进行压缩
    response:
      enabled: true  # 开启响应数据压缩功能



# logging path
logging:
  level:
    root: info
  file:
    #    path: "/logs/${spring.application.name}.log"
    name: "./logs/${spring.application.name}.log"
    # 最大日志文件大小(默认为10MB，这里为了测试归档，暂时设置为2KB)
    #    max-size: 2KB
    # 要保留的日志备份的总大小(默认为0B)
    #    total-size-cap: 1GB
  pattern:
    # 日志记录格式[组件名称] [时间戳] [日志级别] [类名.方法名] [消息文本]
    file: "${spring.application.name} %d{yyyy-MM-dd HH:mm:ss.SSS} %p %C.%M %m %n"
  logback:
    rollingpolicy:
      # 根据文件大小归档，超过2KB自动归档，次日启动服务时也会自动归档
      file-name-pattern: ./logs/%d{yyyyMMdd}/${spring.application.name}.out.log.%d{yyyy-MM-dd}.%i.gz
      # 最大日志文件大小(默认为10MB，这里为了测试归档，暂时设置为2KB)
      max-file-size: 2KB
      # 要保留的日志备份的总大小(默认为0B)
      total-size-cap: 1GB
      # 保存存档日志文件的最大天数(默认为7天)
      max-history: 20
#  ————————————————
#  版权声明：本文为CSDN博主「嗷呜～~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
#  原文链接：https://blog.csdn.net/qq_41287063/article/details/118580999






